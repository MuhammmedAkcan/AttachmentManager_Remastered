<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="SENEC" constructor="AttachmentManager" version="0.0.1" display-name-key="Attachment Manager - Remastered" description-key="A component to allow better user experience in attaching documents from SharePoint, Notes and local files." control-type="standard" >
    <property name="RegardingId" display-name-key="Regarding Id" description-key="GUID of an associated regarding in the email." of-type="SingleLine.Text" usage="bound" required="true" />
    <property name="SharePointSiteURLs" display-name-key="SharePoint Site URLs" description-key="URLs of SharePoint sites separated by comma." of-type="SingleLine.Text" usage="input" required="true" />
    <property name="FlowURL" display-name-key="Flow URL" description-key="HTTP endpoint of Microsoft Flow reading file content from SharePoint. Placeholders: {0} - SharePoint Site URL, {1} - File Path." of-type="SingleLine.TextArea" usage="input" required="true" />
    
    
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type="SingleLine.Text" usage="bound" required="true" />
    <!--
      Property node's of-type attribute can be of-type-group attribute.
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1"/>
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/SampleControl.css" order="1" />
      <resx path="strings/SampleControl.1033.resx" version="1.0.0" />
      -->
    </resources>

    <feature-usage>
      <!-- <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" /> -->
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    
  </control>
</manifest>
